import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';
import { AngularFirestore } from '@angular/fire/firestore';
import Swal from 'sweetalert2';

@Component({
	selector: 'app-dates',
	templateUrl: './dates.component.html',
	styleUrls: ['./dates.component.scss'],
})
export class DatesComponent implements OnInit {
	_date: Date;
	min: Date = new Date(
		new Date().setTime(new Date().getTime() + 14 * 86400000)
	);
	@Output('date') date = new EventEmitter();
	@Input() soldOutDates: Array<string>;
	removeSoldOut = (d: Date): boolean => {
		const singleDate = d.toDateString();
		return this.soldOutDates.every(so => so !== singleDate);
	};
	constructor(private af: AngularFirestore) {}
	sendDates() {
		const maxDateString = new Date('12/31/21');
		const maxDate = maxDateString.getTime();
    const todayNumber = this._date.getTime();
    const isBeforeMaxDate = maxDate > todayNumber;
		if (this._date) {
			return this.date.emit(this._date);
		}
	}
	ngOnInit() {}
}

// Removed this function because it was being used to limit when guests are allowed to book into next year.
// No longer a situation.
function showError() {
	Swal.fire({
		icon: 'warning',
		title: 'Inventory',
		text:
			'2021 availability is not loaded yet, please check back in for updates or call us at (844) 648-2229',
		confirmButtonColor: 'green',
	});
}
